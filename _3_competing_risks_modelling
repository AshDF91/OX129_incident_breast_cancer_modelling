******************************************************************************** 
*                             TABLE OF CONTENTS  
* 1) FRACTIONAL POLYNOMIALS 
* 2) FIT FULL MODEL  
*	3) INTERNAL-EXTERNAL CROSS-VALIDATION RUN 
*	4) PERFORMANCE ASSESSMENT  
******************************************************************************** 

******************************************************************************** 
*    1) Fractional polynomials, predictor selection, pseudovalue computation   * 
******************************************************************************** 
 
* As candidate predictors may have different associations with the outcome in a  
* competing risks, pseudovalues-based model (vs. Cox model), we start with the  
*'raw data' and repeat the processing steps to:  
* Find the optimal FP terms for age, BMI, Townsend 
 
use "\\data\final_datasets\Endpoint_1\OX129_endpoint1_imputed.dta" 

* Events, including competing events were classified during data prep stage *  
tab endpoint  
summ time, det 

* Stset the data, stop follow-up at 10yrs, as seeking 10-yr prediction horizon * 
mi stset time, failure(endpoint==1) exit(time 10) 

* Calculate jack-knife pseuod-observations * 
stpci endpoint, at(10) 
summ pseudo, det 

* Fractional polynomials for age at cohort entry, BMI at cohort entry, Townsend *  
* Remove cloglog link as difficulty converging - use link function in glm to find best FP *  
timer on 1  
mfp, all: glm pseudo age baseline_bmi town_int 
timer off 1 
timer list  


* Plot terms *  
glm pseudo Iage*, link(cloglog) irls  
predict age_xb, xb  
replace age_xb = 1 - exp(-exp(age_xb))   
twoway fpfitci age_xb age, graphregion(color(white)) leg(off) xtitle("Age at cohort entry", size(medium)) ytitle("Predicted event probability", size(medium))  
graph save "Graph" "\\graphs\ep1_competing\FP_age_competing_EP1.gph", replace  
 
glm pseudo_crr Ibase*, link(cloglog) irls  
predict bmi_xb, xb  
replace bmi_xb = 1 - exp(-exp(bmi_xb))  
twoway fpfitci bmi_xb baseline_bmi, graphregion(color(white)) leg(off) xtitle("Body mass index at cohort entry", size(medium)) ytitle("Predicted event probability", size(medium))  
graph save "Graph" "\\graphs\ep1_competing\FP_bmi_competing_EP1.gph", replace  
 

glm pseudo_crr Itown*, link(cloglog) irls  
predict town_xb, xb  
replace town_xb = 1 - exp(-exp(town_xb))   
twoway fpfitci town_xb town_int, graphregion(color(white)) leg(off) xtitle("Townsend deprivation score", size(medium)) ytitle("Predicted event probability", size(medium))   
graph save "Graph" "\\graphs\ep1_competing\FP_townsend_competing_EP1.gph", replace  

* generate FP terms in imputed datasets * 
drop age_fp1 age_fp2 
rename Iage__1 age_fp1 
rename Iag__2 age_fp2 
mi register regular age_fp1 age_fp2 

mi passive: gen bmi = (exp(ln_bmi))

mi passive: gen town_int_x = ((town_int+8)/10)
mi passive: gen double town_fp1 = ln(town_int_x) + 0.1493358247
mi passive: gen double town_fp2 = (town_int_x^0.5) - 0.9280516296


******************************* 
* Perform predictor selection * 
*******************************  
 
* Form global with all candidate predictors in there *  
cd "Projects\OX129\OX129\models\Endpoint_1\" 

global ep1_all_covariates = "age_fp* bmi town_fp* i.ethnicity i.fibrocystic i.endometriosis i.pcos i.hysterectomy  // 
i.previous_gynae_cancer i.ocp i.recent_oestrogen i.past_oestrogen i.recent_combined i.past_combined i.fh_breastca // 
i.fh_gynaeca i.lungca i.bloodca i.thyroidca i.alcohol_cat6 i.smoke_cat i.type1dm i.type2dm i.ckd i.htn i.ihd i.cirrhosis // 
i.lupus i.vasculitis i.psychosis i.anti_psychotic i.thiazide i.betablocker i.raa i.acei i.cablocker i.tca i.maoi i.ssri // 
c.age_fp1##i.fh_breastca c.age_fp2##i.fh_breastca c.age_fp*##c.bmi_fp*"   

* Fit the 'full' model *  
timer clear  
timer on 1  

mi estimate, dots eform: glm pseudo $ep2_all_covariates, link(cloglog) vce(robust) irls  
parmest, list(,) saving(Competing_risk_endpoint1_parmest_preselection.dta, replace) label eform for(estimate min95 max95)  

timer off 1  
timer list  
timer clear  

* Selected predictor parameters - those with a p<0.01, SHR>1.1 or <0.9 *  
global ep1_select_crr = "age_fp* bmi town_fp* i.fibrocystic i.endometriosis i.pcos i.hysterectomy i.ocp i.recent_oest //
i.recent_combined i.past_oest i.past_combined i.fh_breastca i.lungca i.thyroidca i.alcohol_cat6 i.vasculitis i.psychosis //
i.anti_psychotic ca.age_fp1##i.fh_breastca c.age_fp2##i.fh_breastca"

* Fit the final model *  
timer on 1  
mi estimate, dots eform: glm pseudo $ep2_select_crr, link(cloglog) vce(robust) irls 

* Save coefficients and constant term for later plotting/use *  
parmest, list(,) saving(Competing_risk_endpoint1_coefs.dta, replace) label for(estimate min95 max95)  
parmest, list(,) saving(Competing_risk_endpoint1_shrs.dta, replace) label eform for(estimate min95 max95) 
 
timer off 1  
timer list  
timer clear  

******************************************************************************** 
*                              2) Estimate IPCWs                               * 
******************************************************************************** 
* Estimate IPCWs - Harrell's C needs to be weighted by this due to competing risks formulation  *  

mi stset time if period==2, failure(endpoint==0) exit(time 10)     // Want to 'predict' risk of censoring, i.e. endpoint==0 
                                                                   // evaluating models using Period 2 data, only want to use this half 
sts gen basechazard = na                                           // calculate the base cumulative hazard 
gen base_ipcw = .                                                  // empty var to eventually have the baseline for the IPCW calc
summ basechazard if _t==10                                         // baseline cumulative hazard (of censoring) at 10 years (prediction horizon) 
replace base_ipcw = r(mean) if period==2                           // mean of hazard at 10 years 
mi estimate, dots saving(ep1_ipcw, replace): stcox $ep2_select_crr if period==2, estimate efron   // Estimate effects of variables on this hazard
mi predict xbC using ep1_ipcw if period==2, xb                     // generate a linear predictor - effects of covars on censoring distribution

gen prob_cens = (exp(-base_ipcw)^exp(xbC))                         // Porbbaility of censoring: exp(-haz) ^ exp(linear predictor) 
summ prob_cens, det  
gen ipcw = 1/prob_cens                                             // Inverse of the probability of being censoring
summ ipcw, det   

*Ensure data adequately re-stset - endpoint is breast cancer death *  
mi stset time, failure(endpoint==1) exit(time 10)   

save "\\qrvfile1\Projects\OX129\OX129\data\final_datasets\Endpoint_1\OX129_endpoint1_pseudovaluescif.dta", replace  
clear  

******************************************************************************** 
******************************************************************************** 


******************************************************************************** 
*                 3) Internal-external cross-validation run                    * 
******************************************************************************** 
********************** 
* Preparing for IECV *  
********************** 
 
* By using pseudovalues for the endpoint, and need to have separate time periods  
* for IECV, we will form two separate sub-datasets - one for period 1, another for  
* period 2.   
* Period 1 will be used to fit model, linear predictor and probabilities will be  
* calculated in iteratively held-out Period 2 samples. 

use "\\data\final_datasets\Endpoint_2\OX129_endpoint2_pseudovaluescif.dta", clear

* Need to generate a measure of FU time from entry to earliest of: event/competing event/censoring/end of period 1/end of study *  
gen fu_start = enter3  
format fu_start %td  
gen fu_end = .  
 
gen timesplit = mdy(01,01,2010)   // cut-off between Period 1 and Period 2 starting 
format timesplit %td 
tab period, m  
 
replace fu_end = min(exit3date, timesplit) if period==1   // follow-up is truncated at timesplit if person entered in Period 1
                                                          // but did not have an event/exit until some point in Period 2. 
replace fu_end = exit3date if period==2                   // The second period is easier - the truncation of follow-up is at 10 years, stset will do this 
format fu_end %td  
gen follow_up = fu_end-fu_start                           // follow-up duration 
summ follow_up, det  

* Overall event counts, any time in study period *  
tab endpoint  

* Generate new event indicator for IECV - we only want events that occurred within the Period in which they entered *  
gen iecv_event = 0  
replace iecv_event = 1 if period==1 & endpoint==1 & exit3date<timesplit   // Entered in Period 1, breast cancer diagnosed Period 1 = IECV event 
replace iecv_event = 1 if period==2 & endpoint==1                         // Entered in Period 2, breast cancer diagnosed after = IECV event 
 
replace iecv_event = 2 if period==1 & endpoint==2 & exit3date<timesplit   // Entered in Period 1, other cause death in Period 1 = IECV competing event 
replace iecv_event = 2 if period==2 & endpoint==2                         // Entered in Period 2, other cause death in Period 2 = IECV competing event 

tab period  
tab iecv_event  
tab period iecv_event  


* quick quality checks *  
tab endpoint if period==1  
tab iecv_event if period==1  
tab iecv_event if period==2  

* Estimate pseudovalues for CIF at 10 years in Period 1 data - this will be the  
* 'target' for the models in IECV *  
replace follow_up = follow_up/365.25     // scale is years 
summ follow_up, det  

mi stset follow_up if period==1, failure(iecv_event==1) exit(time 10)    // Only in Period 1 data; 10-year prediction horizon 
                                                                         // These CIF vales are the 'outcome' we will use in IECV
tab endpoint iecv_event if period==1                      
stpci if period==1, at(10) gen(period1_pseudo)                // calculate pseudo-observations for Aalen-Johansen CIF at 10 years 
summ period1_pseudo, det                      


mi stset follow_up if period==2, failure(iecv_event==1) exit(time 10)  // Need the outcome in Period 2 for IECV (validation). 10-yr horizon
stpci if period==2, at(10) gen(period2_pseudo)                         // Pseudo-observations for A-J CIF at 10 yrs in the validation 'half' 
summ period2_pseudo, det  

* Save this dataset - mark as different for the competing risks modelling and outputs *  
save "\\data\final_datasets\Endpoint_2\OX129_endpoint1_pseudovaluescif.dta", replace  

 
* convert to flong format, so that predictions are stored for each imputation *  
mi convert flong  

************ 
* Run IECV * 
************  
* Generate new variables in which to store held out predictions*  
* Want to keep linear predictor (can be converted into HR later) * 
* Then, we can use them for the pooled overall metrics, but also to calculate centre-specific estimates *   

drop xb  
gen iecv_xb = .   

* Loop over each region, fit model, estimate metrics on held out region data. Later, we present individual practice results *  
cd "\\estimates\" 

* Just in case there are convergence issues in one imputation... [There were not any] *
* Therefore, use the errorok option to still continues with IECV, pool estimates across datasets that 'work' *   
timer clear  
timer on 2  

* sha1 is the region variable (10 levels = 10 regions) 

forval x = 1(1)10 {  
mi estimate, dots errorok saving(myestiecv_ep1crr, replace): glm period1_pseudo $ep1_select_crr if (sha1!=`x' & period==1), link(cloglog) irls vce(robust) 
mi predict double xb if (sha1==`x' & period==2) using myestiecv_ep1crr, xb storecompleted  
replace iecv_xb = xb if iecv_xb==.  
drop xb  
display `x' 
} 

timer off 2  
timer list  

summ iecv_xb, det  
count if iecv_xb==.      // Number of missings will equal the number of observations in Period 1 data - quick QC. 
tab period  

* Save updated dataset: save predictions, and then can use for the model evaluation*  
save "\\data\final_datasets\Endpoint_1\OX129_endpoint1_competingrisk_IECV.dta" , replace 
 
